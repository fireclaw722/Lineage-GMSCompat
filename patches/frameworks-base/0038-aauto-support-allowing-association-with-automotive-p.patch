From 5ede7146362ce37ee5e383504629d991b97c98ca Mon Sep 17 00:00:00 2001
From: Dmitry Muhomor <muhomor.dmitry@gmail.com>
Date: Mon, 18 Dec 2023 19:28:43 +0200
Subject: [PATCH 38/45] aauto: support allowing association with "automotive
 projection" devices

---
 .../companion/AssociationRequestsProcessor.java     | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/services/companion/java/com/android/server/companion/AssociationRequestsProcessor.java b/services/companion/java/com/android/server/companion/AssociationRequestsProcessor.java
index 69647633eaff..634c660f190f 100644
--- a/services/companion/java/com/android/server/companion/AssociationRequestsProcessor.java
+++ b/services/companion/java/com/android/server/companion/AssociationRequestsProcessor.java
@@ -31,6 +31,7 @@ import static com.android.server.companion.RolesUtils.addRoleHolderForAssociatio
 import static com.android.server.companion.RolesUtils.isRoleHolder;
 import static com.android.server.companion.Utils.prepareForIpc;
 
+import static com.android.server.pm.ext.AndroidAutoHooks.isAndroidAutoWithGrantedBasePrivPerms;
 import static java.util.Objects.requireNonNull;
 
 import android.annotation.NonNull;
@@ -168,10 +169,14 @@ class AssociationRequestsProcessor {
         enforcePermissionsForAssociation(mContext, request, packageUid);
         enforceUsesCompanionDeviceFeature(mContext, userId, packageName);
 
+        final boolean shouldSkipAddRoleHolderCheck =
+                AssociationRequest.DEVICE_PROFILE_AUTOMOTIVE_PROJECTION.equals(request.getDeviceProfile())
+                        && isAndroidAutoWithGrantedBasePrivPerms(packageName, userId);
+
         // 2. Check if association can be created without launching UI (i.e. CDM needs NEITHER
         // to perform discovery NOR to collect user consent).
         if (request.isSelfManaged() && !request.isForceConfirmation()
-                && !willAddRoleHolder(request, packageName, userId)) {
+                && (shouldSkipAddRoleHolderCheck || !willAddRoleHolder(request, packageName, userId))) {
             // 2a. Create association right away.
             createAssociationAndNotifyApplication(request, packageName, userId,
                     /* macAddress */ null, callback, /* resultReceiver */ null);
@@ -285,7 +290,11 @@ class AssociationRequestsProcessor {
                 selfManaged, /* notifyOnDeviceNearby */ false, /* revoked */ false,
                 timestamp, Long.MAX_VALUE, /* systemDataSyncFlags */ 0);
 
-        if (deviceProfile != null) {
+        final boolean skipAddRoleHolder =
+                AssociationRequest.DEVICE_PROFILE_AUTOMOTIVE_PROJECTION.equals(deviceProfile)
+                        && isAndroidAutoWithGrantedBasePrivPerms(packageName, userId);
+
+        if (!skipAddRoleHolder && deviceProfile != null) {
             // If the "Device Profile" is specified, make the companion application a holder of the
             // corresponding role.
             addRoleHolderForAssociation(mService.getContext(), association, success -> {
-- 
2.34.1

