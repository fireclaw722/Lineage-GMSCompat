From a4a2d26d4b7f4816a1a13c28ad07295d7b92486a Mon Sep 17 00:00:00 2001
From: Dmitry Muhomor <muhomor.dmitry@gmail.com>
Date: Mon, 18 Dec 2023 19:40:11 +0200
Subject: [PATCH 44/44] aauto: support granting privileged permissions via
 PackageHooks

Change-Id: I9a1b20ed58a0135954e31080ca5795dffc32fe99
---
 core/api/system-current.txt                   |   7 +
 .../android/app/compat/gms/AndroidAuto.java   |  14 ++
 .../server/pm/ext/AndroidAutoHooks.java       | 133 ++++++++++++++++++
 .../pm/ext/GmsCompatPkgParsingHooks.java      |   1 +
 .../server/pm/ext/PackageHooksRegistry.java   |   1 +
 5 files changed, 156 insertions(+)
 create mode 100644 core/java/android/app/compat/gms/AndroidAuto.java
 create mode 100644 services/core/java/com/android/server/pm/ext/AndroidAutoHooks.java

diff --git a/core/api/system-current.txt b/core/api/system-current.txt
index 67b36d40dfe6..2e45d450d4aa 100644
--- a/core/api/system-current.txt
+++ b/core/api/system-current.txt
@@ -2074,6 +2074,13 @@ package android.app.compat {
 
 package android.app.compat.gms {
 
+  public class AndroidAuto {
+    field public static final long PKG_FLAG_GRANT_AUDIO_ROUTING_PERM = 4L; // 0x4L
+    field public static final long PKG_FLAG_GRANT_PERMS_FOR_ANDROID_AUTO_PHONE_CALLS = 8L; // 0x8L
+    field public static final long PKG_FLAG_GRANT_PERMS_FOR_WIRED_ANDROID_AUTO = 1L; // 0x1L
+    field public static final long PKG_FLAG_GRANT_PERMS_FOR_WIRELESS_ANDROID_AUTO = 2L; // 0x2L
+  }
+
   public final class GmsCompat {
     method public static boolean hasPermission(@NonNull String);
     method public static boolean isEnabled();
diff --git a/core/java/android/app/compat/gms/AndroidAuto.java b/core/java/android/app/compat/gms/AndroidAuto.java
new file mode 100644
index 000000000000..e1f3963dd035
--- /dev/null
+++ b/core/java/android/app/compat/gms/AndroidAuto.java
@@ -0,0 +1,14 @@
+package android.app.compat.gms;
+
+import android.annotation.SystemApi;
+
+/** @hide */
+@SystemApi
+public class AndroidAuto {
+    public static final long PKG_FLAG_GRANT_PERMS_FOR_WIRED_ANDROID_AUTO = 1L;
+    public static final long PKG_FLAG_GRANT_PERMS_FOR_WIRELESS_ANDROID_AUTO = 1L << 1;
+    public static final long PKG_FLAG_GRANT_AUDIO_ROUTING_PERM = 1L << 2;
+    public static final long PKG_FLAG_GRANT_PERMS_FOR_ANDROID_AUTO_PHONE_CALLS = 1L << 3;
+
+    private AndroidAuto() {}
+}
diff --git a/services/core/java/com/android/server/pm/ext/AndroidAutoHooks.java b/services/core/java/com/android/server/pm/ext/AndroidAutoHooks.java
new file mode 100644
index 000000000000..a42e148d2be9
--- /dev/null
+++ b/services/core/java/com/android/server/pm/ext/AndroidAutoHooks.java
@@ -0,0 +1,133 @@
+package com.android.server.pm.ext;
+
+import android.Manifest;
+import android.content.pm.PackageManagerInternal;
+import android.ext.PackageId;
+
+import com.android.internal.pm.pkg.component.ParsedUsesPermissionImpl;
+import com.android.server.LocalServices;
+import com.android.server.pm.pkg.AndroidPackage;
+import com.android.server.pm.pkg.GosPackageStatePm;
+
+import java.util.List;
+
+import static android.app.compat.gms.AndroidAuto.PKG_FLAG_GRANT_AUDIO_ROUTING_PERM;
+import static android.app.compat.gms.AndroidAuto.PKG_FLAG_GRANT_PERMS_FOR_ANDROID_AUTO_PHONE_CALLS;
+import static android.app.compat.gms.AndroidAuto.PKG_FLAG_GRANT_PERMS_FOR_WIRED_ANDROID_AUTO;
+import static android.app.compat.gms.AndroidAuto.PKG_FLAG_GRANT_PERMS_FOR_WIRELESS_ANDROID_AUTO;
+
+public class AndroidAutoHooks extends PackageHooks {
+    private static final String TAG = AndroidAutoHooks.class.getSimpleName();
+
+    static class ParsingHooks extends GmsCompatPkgParsingHooks {
+
+        @Override
+        public List<ParsedUsesPermissionImpl> addUsesPermissions() {
+            List<ParsedUsesPermissionImpl> res = super.addUsesPermissions();
+
+            res.addAll(createUsesPerms(
+                    Manifest.permission.ASSOCIATE_COMPANION_DEVICES_RESTRICTED,
+                    Manifest.permission.BLUETOOTH_PRIVILEGED_ANDROID_AUTO,
+                    Manifest.permission.MANAGE_USB_ANDROID_AUTO,
+                    Manifest.permission.READ_DEVICE_SERIAL_NUMBER,
+                    Manifest.permission.READ_PRIVILEGED_PHONE_STATE_ANDROID_AUTO,
+                    Manifest.permission.WIFI_PRIVILEGED_ANDROID_AUTO
+            ));
+
+            return res;
+        }
+    }
+
+    public static boolean isAndroidAutoWithGrantedBasePrivPerms(String packageName, int userId) {
+        if (!PackageId.ANDROID_AUTO_NAME.equals(packageName)) {
+            return false;
+        }
+
+        var pm = LocalServices.getService(PackageManagerInternal.class);
+        AndroidPackage pkg = pm.getPackage(packageName);
+        if (pkg == null || PackageExt.get(pkg).getPackageId() != PackageId.ANDROID_AUTO) {
+            return false;
+        }
+
+        GosPackageStatePm ps = pm.getGosPackageState(packageName, userId);
+        long flags = PKG_FLAG_GRANT_PERMS_FOR_WIRED_ANDROID_AUTO | PKG_FLAG_GRANT_PERMS_FOR_WIRELESS_ANDROID_AUTO;
+        return ps != null && (ps.packageFlags & flags) != 0;
+    }
+
+    @Override
+    public int overridePermissionState(String permission, int userId) {
+        long flags;
+
+        switch (permission) {
+            case
+                /** @see android.companion.virtual.VirtualDeviceParams#LOCK_STATE_ALWAYS_UNLOCKED */
+                Manifest.permission.ADD_ALWAYS_UNLOCKED_DISPLAY,
+                /** @see android.hardware.display.DisplayManager#VIRTUAL_DISPLAY_FLAG_TRUSTED */
+                Manifest.permission.ADD_TRUSTED_DISPLAY,
+                Manifest.permission.CREATE_VIRTUAL_DEVICE,
+                /** @see android.app.UiModeManager#enableCarMode(int, int) */
+                Manifest.permission.ENTER_CAR_MODE_PRIORITIZED,
+                Manifest.permission.MANAGE_USB_ANDROID_AUTO,
+                // allows to enable/disable dark mode
+                Manifest.permission.MODIFY_DAY_NIGHT_MODE,
+                // allows to asssociate only with DEVICE_PROFILE_AUTOMOTIVE_PROJECTION
+                Manifest.permission.REQUEST_COMPANION_PROFILE_AUTOMOTIVE_PROJECTION,
+                // doesn't grant any data access, included here to improve UX
+                Manifest.permission.POST_NOTIFICATIONS,
+                /** @see android.companion.AssociationInfo#isSelfManaged (check callers)*/
+                Manifest.permission.REQUEST_COMPANION_SELF_MANAGED,
+                /** @see android.app.UiModeManager#requestProjection  */
+                Manifest.permission.TOGGLE_AUTOMOTIVE_PROJECTION ->
+                    flags = PKG_FLAG_GRANT_PERMS_FOR_WIRED_ANDROID_AUTO | PKG_FLAG_GRANT_PERMS_FOR_WIRELESS_ANDROID_AUTO;
+
+            case Manifest.permission.MODIFY_AUDIO_ROUTING ->
+                    flags = PKG_FLAG_GRANT_AUDIO_ROUTING_PERM;
+
+            case
+                // Allows Android Auto to associate with any companion device that has a MAC address
+                // Unrestricted version would allow Android Auto to associate any package in any user
+                // with any such device. Not clear whether it's feasible to restrict this permission
+                // further.
+                Manifest.permission.ASSOCIATE_COMPANION_DEVICES_RESTRICTED,
+                Manifest.permission.INTERNET,
+                // allows to read MAC address of Bluetooth and WiFi adapters
+                Manifest.permission.LOCAL_MAC_ADDRESS,
+                // unprivileged permission
+                Manifest.permission.NEARBY_WIFI_DEVICES,
+                Manifest.permission.READ_DEVICE_SERIAL_NUMBER,
+                // grants access to a small subset of privileged WiFi APIs
+                Manifest.permission.WIFI_PRIVILEGED_ANDROID_AUTO ->
+                    flags = PKG_FLAG_GRANT_PERMS_FOR_WIRELESS_ANDROID_AUTO;
+
+            case
+                // unprivileged permission
+                Manifest.permission.BLUETOOTH_CONNECT,
+                // grants access to a small subset of BLUETOOTH_PRIVILEGED privileges
+                Manifest.permission.BLUETOOTH_PRIVILEGED_ANDROID_AUTO,
+                // unprivileged permission
+                Manifest.permission.BLUETOOTH_SCAN ->
+                    flags = PKG_FLAG_GRANT_PERMS_FOR_WIRELESS_ANDROID_AUTO | PKG_FLAG_GRANT_PERMS_FOR_ANDROID_AUTO_PHONE_CALLS;
+
+            case
+                // unprivileged permission
+                Manifest.permission.CALL_PHONE,
+                Manifest.permission.CALL_PRIVILEGED,
+                Manifest.permission.CONTROL_INCALL_EXPERIENCE,
+                // unprivileged permission
+                Manifest.permission.READ_PHONE_STATE,
+                Manifest.permission.READ_PRIVILEGED_PHONE_STATE_ANDROID_AUTO ->
+                    flags = PKG_FLAG_GRANT_PERMS_FOR_ANDROID_AUTO_PHONE_CALLS;
+
+            default -> {
+                return NO_PERMISSION_OVERRIDE;
+            }
+        }
+
+        GosPackageStatePm gosPs = LocalServices.getService(PackageManagerInternal.class)
+                .getGosPackageState(PackageId.ANDROID_AUTO_NAME, userId);
+
+        long pkgFlags = gosPs != null ? gosPs.packageFlags : 0L;
+
+        return (pkgFlags & flags) != 0 ? PERMISSION_OVERRIDE_GRANT : PERMISSION_OVERRIDE_REVOKE;
+    }
+}
diff --git a/services/core/java/com/android/server/pm/ext/GmsCompatPkgParsingHooks.java b/services/core/java/com/android/server/pm/ext/GmsCompatPkgParsingHooks.java
index 02f2e3ea7c5e..7f1e37249d04 100644
--- a/services/core/java/com/android/server/pm/ext/GmsCompatPkgParsingHooks.java
+++ b/services/core/java/com/android/server/pm/ext/GmsCompatPkgParsingHooks.java
@@ -30,6 +30,7 @@ public class GmsCompatPkgParsingHooks extends PackageParsingHooks {
             case PackageId.GMS_CORE_NAME -> new GmsCoreHooks.ParsingHooks();
             case PackageId.PLAY_STORE_NAME -> new PlayStoreHooks.ParsingHooks();
             case PackageId.G_CARRIER_SETTINGS_NAME -> new GCarrierSettingsHooks.ParsingHooks();
+            case PackageId.ANDROID_AUTO_NAME -> new AndroidAutoHooks.ParsingHooks();
             default -> new GmsCompatPkgParsingHooks();
         };
     }
diff --git a/services/core/java/com/android/server/pm/ext/PackageHooksRegistry.java b/services/core/java/com/android/server/pm/ext/PackageHooksRegistry.java
index 3b3d15bf6a1c..612bf3a30b6b 100644
--- a/services/core/java/com/android/server/pm/ext/PackageHooksRegistry.java
+++ b/services/core/java/com/android/server/pm/ext/PackageHooksRegistry.java
@@ -20,6 +20,7 @@ public class PackageHooksRegistry {
     public static PackageHooks getHooks(int packageId) {
         return switch (packageId) {
             case PackageId.G_CARRIER_SETTINGS -> new GCarrierSettingsHooks();
+            case PackageId.ANDROID_AUTO -> new AndroidAutoHooks();
             default -> PackageHooks.DEFAULT;
         };
     }
-- 
2.34.1

